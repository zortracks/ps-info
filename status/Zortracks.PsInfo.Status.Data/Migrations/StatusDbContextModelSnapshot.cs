// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zortracks.PsInfo.Status.Data.DbContexts;

#nullable disable

namespace Zortracks.PsInfo.Status.Data.Migrations
{
    [DbContext(typeof(StatusDbContext))]
    partial class StatusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zortracks.PsInfo.Status.Data.Entities.EntryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Issued")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectName");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("Zortracks.PsInfo.Status.Data.Entities.ProjectEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Zortracks.PsInfo.Status.Data.Entities.EntryEntity", b =>
                {
                    b.HasOne("Zortracks.PsInfo.Status.Data.Entities.ProjectEntity", "Project")
                        .WithMany("Entries")
                        .HasForeignKey("ProjectName")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Zortracks.PsInfo.Status.Data.Entities.ProjectEntity", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
